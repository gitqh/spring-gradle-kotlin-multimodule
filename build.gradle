buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

allprojects {
  apply plugin: 'kotlin'
  apply plugin: 'kotlin-spring'
  apply plugin: 'idea'
  apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

  group = 'cz.zubal'
  version = '0.2'
  sourceCompatibility = 1.8
  compileKotlin {
    kotlinOptions {
      freeCompilerArgs = ["-Xjsr305=strict"]
      jvmTarget = "1.8"
    }
  }
  compileTestKotlin {
    kotlinOptions {
      freeCompilerArgs = ["-Xjsr305=strict"]
      jvmTarget = "1.8"
    }
  }

  repositories {
    mavenCentral()
    maven {
        url = uri('http://localhost:8081/nexus/content/groups/public')
    }
  }

  dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
  }

  dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.modelmapper:modelmapper:1.1.2")
    testCompile("com.h2database:h2:1.4.196")
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

      compile('cz.zubal:customer:0.1')
      compile('cz.zubal:item:0.1')
      compile('cz.zubal:order:0.1')
  }

    uploadArchives {
        repositories.mavenDeployer {
            def nexusUrl ="http://localhost:8081/nexus"
            repository(url: "${nexusUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            pom.version ="$project.version"
            pom.artifactId ="$project.name"
            pom.groupId ="$project.group"
        }
    }
}

//dependencies {
//  compile project(':customer')
//  compile project(':item')
//  compile project(':order')
//}




